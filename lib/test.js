// Generated by LiveScript 1.2.0
(function(){
  var ref$, parser, tokenizer, parse, shuffler, mona, util, test, testP, testT;
  ref$ = require('./parser'), parser = ref$.parser, tokenizer = ref$.tokenizer, parse = ref$.parse;
  shuffler = require('./shuffler');
  mona = require('mona-parser');
  util = require('util');
  test = function(input){
    console.log('P[%s] =', input);
    return console.log(util.inspect(shuffler.assignment(parse(input)), {
      depth: null,
      colors: true
    }));
  };
  testP = function(rule, input){
    console.log('P.%s[%s] =', rule, input);
    return console.log(util.inspect(mona.parse(parser[rule](), input), {
      depth: null,
      colors: true
    }));
  };
  testT = function(rule, input){
    console.log('T.%s[%s] =', rule, input);
    return console.log(util.inspect(mona.parse(tokenizer[rule](), input), {
      depth: null,
      colors: true
    }));
  };
  test('foo = bar');
  test('Foo bar = baz');
  test('foo = bar = baz');
  test('Foo a = Bar b = Baz c');
  test('{}(test = "work...")');
  test('{ arr = ["this is the real syntax for arrays and indexes", test], syntax = :real }');
}).call(this);
